// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
// swift-module-flags: -target x86_64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name NBARKit
import ARKit
import Combine
import Swift
import SwiftUI
public protocol NBARPhotosAnchor {
  var id: Foundation.UUID { get }
  var altitude: CoreLocation.CLLocationDistance? { get }
  var coordinate: CoreLocation.CLLocationCoordinate2D { get }
  var course: CoreLocation.CLLocationDirection { get }
  var pixelHeight: Swift.Int? { get }
  var pixelWidth: Swift.Int? { get }
}
public protocol NBARPhotosViewDataModel : Combine.ObservableObject {
  var anchors: Swift.Array<NBARKit.NBARPhotosAnchor> { get }
  func cancelImageRequest(for id: Foundation.UUID)
  func placeholder(for anchor: NBARKit.NBARPhotosAnchor) -> UIKit.UIImage?
  func requestImage(for anchor: NBARKit.NBARPhotosAnchor, resultHandler: @escaping (UIKit.UIImage?, Swift.Dictionary<Swift.AnyHashable, Any>?) -> Swift.Void) -> Foundation.UUID?
}
public struct NBARPhotosView<DataModel> : SwiftUI.View where DataModel : NBARKit.NBARPhotosViewDataModel {
  public var body: some SwiftUI.View {
    get
  }
  public init(model: DataModel, isEditing: Swift.Bool)
  public typealias Body = @_opaqueReturnTypeOf("$s7NBARKit14NBARPhotosViewV4bodyQrvp", 0) ðŸ¦¸<DataModel>
}
